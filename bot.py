import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

#‚õîÔ∏è –≤—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω —Ç—É—Ç:
bot = telebot.TeleBot(7906336905:AAEG1wlCl2C7HElzttpVJ-kbnM1GT32lPFs)

#‚õîÔ∏è —Ç—É—Ç —Å–∞–º –∫–∞–Ω–∞–ª (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏):
CHANNEL_ID = @rso_official

votes = {}

def is_subscribed(user_id):
    try:
        status = bot.get_chat_member(CHANNEL_ID, user_id).status
        return status in ['member', 'creator', 'administrator']
    except:
        return False

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞.\n–í–≤–µ–¥–∏ /vote, —á—Ç–æ–±—ã –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å!')

@bot.message_handler(commands=['vote'])
def vote(message):
    if not is_subscribed(message.from_user.id):
        bot.send_message(message.chat.id, f'‚ùå —Å–ø–µ—Ä–≤–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: {CHANNEL_ID}')
        return

    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ö–æ–Ω–∫—É—Ä—Å–∞–Ω—Ç 1 üî•", callback_data='contestant_1'))
    markup.add(InlineKeyboardButton("–ö–æ–Ω–∫—É—Ä—Å–∞–Ω—Ç 2 üíé", callback_data='contestant_2'))
    markup.add(InlineKeyboardButton("–ö–æ–Ω–∫—É—Ä—Å–∞–Ω—Ç 3 üöÄ", callback_data='contestant_3'))

    bot.send_message(message.chat.id, "–í—ã–±–∏—Ä–∞–π —Ñ–∞–≤–æ—Ä–∏—Ç–∞:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('contestant_'))
def query_vote(call):
    if not is_subscribed(call.from_user.id):
        bot.answer_callback_query(call.id, '‚ùå –¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª!', show_alert=True)
        return

    if call.from_user.id in votes:
        bot.answer_callback_query(call.id, '‚ö†Ô∏è –¢—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª!', show_alert=True)
        return

    votes[call.from_user.id] = call.data
    bot.answer_callback_query(call.id, '‚úÖ –¢–≤–æ–π –≥–æ–ª–æ—Å –∑–∞—Å—á–∏—Ç–∞–Ω!', show_alert=True)

bot.infinity_polling()
